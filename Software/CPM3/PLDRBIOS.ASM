
;	CP/M 3.0 LOADER BIOS FOR THE MiniSys System
;	AND THE ZFDC FDC BOARD
;
;	AB0TJ, 2019

BELL	EQU	07H
CR	EQU	0DH
LF	EQU	0AH
NBYTES  EQU	128			;(128 byte sectors)

	; MiniSys Equates
	shm$base equ 0fff0h
	shm$cmd equ shm$base
	shm$data equ shm$base + 1
	shm$track equ shm$base + 3
	shm$sect equ shm$base + 5
	shm$dma equ shm$base + 7
	shm$drive equ shm$base + 9
	cmd$readsec equ 0
	cmd$writesec equ 1
	cmd$chkdisk equ 2


	; INCLUDE CP/M 3.0 DISK DEFINITION MACROS:
	MACLIB	CPM3

;	CODE BEGINS HERE:	

	JMP	BOOT			;INITIAL ENTRY ON COLD START
	JMP	WBOOT			;REENTRY ON PROGRAM EXIT, WARM START
	JMP	CONST			;RETURN CONSOLE INPUT STATUS
	JMP	CONIN			;RETURN CONSOLE INPUT CHARACTER
	JMP	CONOUT			;SEND CONSOLE OUTPUT CHARACTER
	JMP	LIST			;SEND LIST OUTPUT CHARACTER
	JMP	AUXOUT			;SEND AUXILLIARY OUTPUT CHARACTER
	JMP	AUXIN			;RETURN AUXILLIARY INPUT CHARACTER
	JMP	HOME			;SET DISKS TO LOGICAL HOME
	JMP	SELDSK			;SELECT DISK DRIVE, RETURN DISK PARAMETER INFO
	JMP	SETTRK			;SET DISK TRACK
	JMP	SETSEC			;SET DISK SECTOR
	JMP	SETDMA			;SET DISK I/O MEMORY ADDRESS
	JMP	READ			;<----------- READ PHYSICAL BLOCK(S)
	JMP	FWRITEA			;WRITE PHYSICAL BLOCK(S)
	JMP	LISTST			;RETURN LIST DEVICE STATUS
	JMP	SECTRN			;TRANSLATE LOGICAL TO PHYSICAL SECTOR
	JMP	CONOST			;RETURN CONSOLE OUTPUT STATUS
	JMP	AUXIST			;RETURN AUXILLIARY INPUT STATUS
	JMP	AUXOST			;RETURN AUXILLIARY OUTPUT STATUS
	JMP	DEVTBL			;RETURN ADDRESS OF DEVICE DEFINITION TABLE
	JMP	?CINIT			;CHANGE BAUD RATE OF DEVICE
	JMP	GETDRV			;RETURN ADDRESS OF DISK DRIVE TABLE
	JMP	MULTIO			;SET MULTIPLE RECORD COUNT FOR DISK I/O
	JMP	FLUSH			;FLUSH BIOS MAINTAINED DISK CACHING
	JMP	?MOVE			;BLOCK MOVE MEMORY TO MEMORY
	JMP	?TIME			;SIGNAL TIME AND DATE OPERATION
	JMP	BNKSEL			;SEL BANK FOR CODE EXECUTION AND DEFAULT DMA
	JMP	SETBNK			;SELECT DIFFERENT BANK FOR DISK I/O DMA OPS.
	JMP	?XMOVE			;SET SOURCE AND DEST. BANKS FOR ONE OPERATION
	JMP	0				;RESERVED FOR FUTURE EXPANSION
	JMP	0				;     DITTO
	JMP	0				;     DITTO


CONST:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

LISTST:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

AUXIST:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

AUXOST:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

FLUSH:	XRA	A			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
	RET					; RETURN A FALSE STATUS

LIST:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

AUXOUT:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

DEVTBL:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

?CINIT:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

MULTIO:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

?TIME:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

BNKSEL:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

SETBNK:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

?XMOVE:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

CONIN:	MVI   A,'Z'-40H			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
	RET

AUXIN:	MVI   A,'Z'-40H			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
	RET

CONOUT:							; ROUTINE OUTPUTS A CHARACTER IN [C] TO THE CONSOLE:
	in 0
	ani 2
	jnz CONOUT		; loop until request flag is not set
	mov a,c
	out 1
	ret

CONOST:				; console status, 0 if not ready
	in 0
	cma
	ani 2
	rz
	xra a
	dcr a
	ret

?MOVE:
	RET

SELDSK:	LXI	H,DPH0			; RETURN DPH ADDRESS FOR DRIVE A:
	RET

HOME:	LXI	B,0			; HOME SELECTED DRIVE -- TREAT AS SETTRK(0):

SETTRK:					; ROUTINE SETS TRACK TO ACCESS ON NEXT READ
	mov l,c
	mov h,b
	shld shm$track		; save in memory for later
	RET
	
SETSEC:					; ROUTINE SETS SECTOR TO ACCESS ON NEXT READ
	mov l,c
	mvi h,0				; Minisys is capable of 16 bit sector- but is cp/m?
	shld shm$sect		; save in memory to be used later
	ret

SETDMA:					; ROUTINE SETS DISK MEMORY ADDRESS FOR READ
	mov	l,c	;low order address
	mov	h,b	;high order address
	shld	shm$dma	;save the address
	ret

					;Arrive here with [BC] = Sec #,  [DE] Translation table address.
SECTRN:
	mov h,b
	mov l,c				; don't translate as it doesn't help us here
	inx h				; just offset by one
	ret					;with value in HL

GETDRV:	LXI	H,@DTBL			; RETURN ADDRESS OF DISK DRIVE TABLE:
	RET

FINITA:	RET				; ROUTINE HAS NO FUNCTION IN LOADER BIOS:

FLOGA:	RET				; DOES NOT SEEM TO BE USED IN LOADER BIOS

FWRITEA:XRA	A			; RETURN GOOD RESULT CODE
	RET


WBOOT:	RET				; WARM BOOT IS NOT USED IN LOADER BIOS

	;;;;; BOOT
					; ROUTINE DOES COLD BOOT INITIALIZATION 

BOOT:
	xra a
	sta shm$drive	; select A: drive
	RET

read:	;perform read operation
	mvi a,cmd$readsec
	sta shm$cmd
	out 0		; by this point we should have already set params, so do the i/o
waitio$w:
	in 0
	ani 4
	jnz waitio$w
	lda shm$data
	ret



               	; DISK DRIVE TABLE:
@DTBL:	DW	DPH0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0


DPH0:	DPH	SKEW0,DISK$DPB,256,256

	
DISK$DPB:
	DPB	128,32,2048,4096,1024,6

SKEW0:	SKEW	32,0,1		;<-- Note start with sector 0
	DB	'<----- END OF LOADER BIOS  >' ;Useful for debugging
